{"version":3,"file":"commenting.min.js","sources":["commenting.js"],"sourcesContent":[";(function( $ ) {\n    $( document ).ready( function() {\n        /*\n         jQuery Replacement for the normal WP comment reply JS.\n         As I'm using jQuery anyway may as well include an easier to read/maintin\n         comment reply code. Also alows me to animate things should I want to.\n        */\n\n        window.addComment = {\n\n            interval: 0,\n            /**\n             * The ID of the comment we're replying to.\n             * @type {Number}\n             */\n            replying: 0,\n            action_id: 0,\n            showOne: commentingL10n.rpl_show_1.replace( '%name%', '<span class=\"poster-name\"></span>' ).replace( '%count%', '<span class=\"post-count\">&nbsp;</span>' ),\n            hideOne: commentingL10n.rpl_hide_1.replace( '%name%', '<span class=\"poster-name\"></span>' ).replace( '%count%', '<span class=\"post-count\">&nbsp;</span>' ),\n            showMany: commentingL10n.rpl_show_2.replace( '%name%', '<span class=\"poster-name\"></span>' ).replace( '%count%', '<span class=\"post-count\">&nbsp;</span>' ),\n            hideMany: commentingL10n.rpl_hide_2.replace( '%name%', '<span class=\"poster-name\"></span>' ).replace( '%count%', '<span class=\"post-count\">&nbsp;</span>' ),\n            scrollOff: parseInt( commentingL10n.scroll_off, 10 ),\n\n            /**\n             * We won't move the form to under the comment, it's messy and I don't like\n             * it. Instead we'll take some content from the comment we're replying to\n             * and show that next to the form. This is called moveForm to match WP's\n             * function.\n             */\n            moveForm: function( belowID, commentID, formID, postID ) {\n                var str = $( '#' + belowID + ' > .comment-body .comment-meta' ).next().text(),\n                    to = $( '#' + belowID + ' > .comment-body cite.fn' ).text();\n\n                if ( addComment.replying )\n                    addComment.cancelReply();\n\n                addComment.replying = commentID;\n\n                $( '#comment-form #comment' ).before( $( '<blockquote class=\"reply-quote\"><cite>' + to + '</cite><p>' + (str.length > 130 ? str.substring( 0, 129 ) + '&hellip;' : str) + '</p></blockquote>' ).hide() ).prev( '.reply-quote' ).slideDown();\n                $( '#comment-form input#comment_parent' ).attr( { value: commentID } );\n                $( '#' + belowID + ' > .comment-body ' ).find( '.comment-reply-link' ).hide();\n                $( '#comment-form #cancel-comment-reply-link' ).show();\n\n                if ( typeof $.scrollTo == 'function' ) {\n                    $.scrollTo( '#respond', {\n                        offset: addComment.scrollOff, duration: 500, axis: 'y', onAfter: function( e ) {\n                            $( '#comment' ).focus();\n                        }\n                    } );\n                }\n\n                return false;\n            },\n\n            /**\n             * [cancelReply description]\n             * @param  {[type]}  [description]\n             * @return {[type]}  [description]\n             */\n            cancelReply: function() {\n                if ( addComment.replying !== 0 ) {\n                    addComment.replying = 0;\n                    $( '#comment-form .reply-quote' ).slideUp( 500, function() {\n                        $( this ).remove();\n                    } );\n                    $( '#comment-form input#comment_parent' ).attr( { value: 0 } );\n                    $( '#comment-form #cancel-comment-reply-link' ).hide();\n                    $( '#commentlist' ).find( '.comment-reply-link' ).show();\n                }\n                // Make sure the submit button is still around.\n                $( '#comment-form .submit' ).removeAttr( 'disabled' ).removeClass( 'disabled' );\n                addComment.startInterval( true );\n            },\n\n            /**\n             * Take the depth class assigned to the comment and turn into an int.\n             * @param  {[type]} id [description]\n             * @return {[type]}    [description]\n             */\n            commentDepth: function( id ) {\n                var c;\n                if ( id ) {\n                    c = $( 'li#comment-' + id ).attr( 'class' ).match( /\\bdepth-(\\d+)\\b/i );\n                    return [1] !== undefined && parseInt( c[ 1 ], 10 ) > 0 ? parseInt( c[ 1 ], 10 ) : 1;\n                }\n                else {\n                    // No id passed then we have no comment so 0 is good.\n                    return 0;\n                }\n            },\n\n            /**\n             * [error description]\n             * @param  {[type]} msg [description]\n             * @return {[type]}     [description]\n             */\n            error: function( msg ) {\n                if ( typeof msg !== 'string' )\n                    return false;\n\n                $( '#comment-form .textarea-border' ).after( $( '<div class=\"error\">' + msg + '</div>' ).hide() ).next( '.error' ).slideDown( 'slow', function() {\n\n                    var a = $( this );\n                    // Kill the filter for IE as it makes the text unreadable.\n                    if ( undefined !== $( this )[ 0 ].style ) {\n                        $( this ).css( 'FILTER', '' );\n                        $( this )[ 0 ].style.filter = '';\n                    }\n\n                    setTimeout( function() {\n                        $( a ).slideUp( 'slow', function() {\n                            $( this ).remove();\n                        } );\n                    }, 5000 );\n\n                } );\n\n                return true;\n            },\n\n            /**\n             * Rather than remove all the mark up for a deleted comment we'll just fold it up and empty it.\n             * @param  {[type]} comment_ID [description]\n             * @param  {[type]} action     [description]\n             * @return {[type]}            [description]\n             */\n            deleteComment: function( comment_ID, action ) {\n                var comment_exists = $( 'ul#commentlist li#comment-' + comment_ID + ', #trackback-list li#comment-' + comment_ID ).length;\n\n                if ( !comment_exists )\n                    return true;\n\n                if ( action == 'unapprove' && $( 'ul#commentlist li#comment-' + comment_ID + ' > .comment-body:has( .moderation )' ) )\n                    return true;\n\n                $( 'li#comment-' + comment_ID + ' > .comment-body' ).slideUp( 'slow', function() {\n                    $( this ).text( 'Deleted comment' ).slideDown().parent( 'li#comment-' + comment_ID ).addClass( 'deleted' );\n                } );\n\n                return true;\n            },\n\n            /**\n             * [newComment description]\n             * @param  {[type]} html         [description]\n             * @param  {[type]} comment_ID   [description]\n             * @param  {[type]} parent_ID    [description]\n             * @param  {[type]} scroll_to    [description]\n             * @param  {[type]} comment_type [description]\n             * @return {[type]}              [description]\n             */\n            newComment: function( html, comment_ID, parent_ID, scroll_to, comment_type ) {\n                var comment_exists = $( 'ul#commentlist li#comment-' + comment_ID + ', #trackback-list li#comment-' + comment_ID ).length, depth_class;\n\n                // If comment is already there then lets remove the needs approval message.\n                if ( comment_exists ) {\n                    // Remove the approval messaqe\n                    $( 'ul#commentlist li#comment-' + comment_ID ).find( '.moderation' ).slideUp( 'slow', function() {\n                        $( this ).remove();\n                    } );\n                    // Undelete a comment\n                    if ( $( 'li#comment-' + comment_ID ).hasClass( 'deleted' ) ) {\n                        $( 'li#comment-' + comment_ID + ' > .comment-body' ).slideUp( 'slow', function() {\n                            $( this ).html( $( html ).find( '.comment-body' ).html().trigger( 'newComment' ) ).slideDown( 'slow' );\n                        } ).removeClass( 'deleted' );\n\n                    }\n                    return true;\n                }\n\n                // We're replying so we have to do something different\n                if ( comment_type == 'comment' && parent_ID > 0 ) {\n                    // If the comment we're replying to isn't here we just skip most of this\n                    if ( $( 'ul#commentlist li#comment-' + parent_ID ).length ) {\n\n                        // Check there is a child UL to attach stuff to.\n                        if ( !$( 'ul#commentlist li#comment-' + parent_ID + ' > ul.children' ).length )\n                            $( 'ul#commentlist li#comment-' + parent_ID + ' > div.comment-body' ).after( '<ul class=\"children\"></ul>' );\n\n                        // Attach the comment.\n                        $( 'ul#commentlist li#comment-' + parent_ID + ' > ul.children' ).append( $( html ).hide().addClass( 'rolledup' ).trigger( 'newComment' ) );\n\n                        // Don't trust the depth on the html of replies\n                        depth_class = $( 'li#comment-' + parent_ID ).attr( 'class' ).match( /(?:\\s|^)depth-(\\d+)\\s?/i );\n\n                        if ( depth_class[ 1 ] !== null && depth_class[ 1 ].match( /\\d+/ ) ) {\n                            $( 'ul#commentlist li#comment-' + comment_ID ).removeClass( 'depth-1 depth-2 depth-3 depth-4 depth-5 depth-6 depth-7 depth-8 depth-9 depth-10' ).addClass( 'depth-' + (parseInt( depth_class[ 1 ], 10 ) + 1) );\n\n                            // If the reply turns up to be too deep then we'll kill the reply button\n                            if ( (parseInt( depth_class[ 1 ], 10 ) + 1) >= commentingL10n.max_depth )\n                                $( 'ul#commentlist li#comment-' + comment_ID + ' > div.comment-body .comment-reply-link' ).remove();\n                        }\n\n                        // Check to see if our comment has been added to a rolled up UL\n                        if ( $( '#comment-' + comment_ID )\n                            .closest( 'li:has(div.toggle)' )\n                            .children( '.toggle' )\n                            .hasClass( 'hidden' ) ) {\n\n                            // If it has roll it down\n                            $( '#comment-' + comment_ID ).closest( 'li:has(div.toggle)' ).children( '.toggle' ).removeClass( 'hidden' ).next( 'ul.children' ).slideDown( 'fast', function() {\n                                $( this ).prev( 'div.toggle' ).css( { backgroundPosition: 'bottom right' } ); // FIXES IE8.\n                            } );\n                        }\n\n                        // Change the toggle text to the correct\n                        addComment.toggleToggleText( $( '#comment-' + comment_ID ).closest( 'li:has(div.toggle)' ).children( '.toggle' ) );\n\n                        addComment.addToggles();\n                    }\t// else the thing we're replying to isn't here. Not going to do anything with this for the moment\n\n                }\n                else {\n                    if ( comment_type !== 'comment' && $( '#trackback-list' ).length ) {\n                        $( '#trackback-list' ).append( $( html ).hide().addClass( 'rolledup' ).trigger( 'newComment' ) );\n                    }\n                    else {\n                        if ( commentingL10n.order === 'desc' )\n                            $( 'li#response-cont' ).after( $( html ).hide().addClass( 'rolledup' ).trigger( 'newComment' ) );\n                        else\n                            $( 'li#response-cont' ).before( $( html ).hide().addClass( 'rolledup' ).trigger( 'newComment' ) );\n                    }\n\n                    addComment.addToggles();\n                }\n\n                if ( !scroll_to ) {\n                    $( '#comment-' + comment_ID ).addClass( 'new' ).children( '#div-comment-' + comment_ID ).find( '.comment-meta' ).prepend( '<span class=\"new-comment\"></span>' );\n                    $( '#div-comment-' + comment_ID ).bind( 'mouseover', function() {\n                        $( this ).find( '.comment-meta span.new-comment' ).fadeTo( 1000, 0, function() {\n                            $( this ).closest( 'li' ).removeClass( 'new' );\n                            $( this ).remove();\n                        } );\n                    } );\n                }\n\n                $( 'ul#commentlist, ul#trackback-list' ).find( '.rolledup' ).slideDown( 500, function() {\n                    // Our comment is in place, now let us scroll to it once unrolled.\n                    if ( scroll_to )\n                        $.scrollTo( '#comment-' + comment_ID, { offset: addComment.scrollOff, duration: 500, axis: 'y' } );\n                } ).removeClass( 'rolledup' );\n\n                if ( comment_type !== 'comment' )\n                    addComment.trackbackToggle( 400 );\n\n                return true;\n            },\n\n            /**\n             * Send the comment to WP for processing\n             * @param  {[type]} v [description]\n             * @return {[type]}   [description]\n             */\n            submit: function( v ) {\n                var blankFields = false;\n\n                $( v ).find( '.vital' ).each( function() {\n                    var value = $( this ).val();\n                    if ( value === undefined || value === '' ) {\n                        blankFields = true;\n                        $( this ).addClass( 'oops' );\n                        setTimeout( function() {\n                            $( '#comment-form .vital' ).removeClass( 'oops' );\n                        }, 6000 );\n\n                    }\n                    else {\n                        $( this ).removeClass( 'oops' );\n                    }\n                } );\n\n                // Form not filled out then no point going on.\n                if ( blankFields ) {\n                    addComment.error( commentingL10n.err_txt_mis );\n                    return false;\n                }\n\n                addComment.startInterval( false );\n\n                $( v ).ajaxSubmit( {\n\n                                       beforeSubmit: function( r ) {\n                                           $( '#comment-form .submit' ).attr( { disabled: 'disabled' } ).addClass( 'disabled' );\n                                       },\n\n                                       type: 'POST',\n\n                                       data: {\n                                           // Add a trigger so we know we're doing this ajaxicaly.\n                                           _spec_ajax: 'Why are you looking at this POST data?',\n                                           action: 'new_comment_added',\n                                           depth: addComment.commentDepth( addComment.replying )\n                                       },\n                                       //dataType: 'json', // Not 100% it will always be due to wp_die so need to parse it myself.\n\n                                       error: function( r, e ) {\n                                           var msg;\n\n                                           if ( r.status === 500 ) { // Likely a wp wp_die message\n                                               msg = $( r.responseText ).text().replace( /(\\s+|\\t|\\r\\n|\\n|\\r)+/g, ' ' );\n                                               if ( msg === '' || msg === undefined ) {\n                                                   msg = r.status + ' ' + r.statusText;\n                                               }\n                                               addComment.error( msg );\n                                           }\n                                           else {\n                                               if ( typeof e === 'string' ) {\n                                                   addComment.error( e );\n                                               }\n                                               else {\n                                                   addComment.error( 'Oops!' );\n                                               }\n                                           }\n\n                                           addComment.cancelReply();\n                                       },\n\n                                       success: function( r ) {\n                                           var d;\n                                           try {\n                                               d = JSON.parse( r );\n                                           }\n                                           catch ( e ) {\n                                               if ( typeof r === 'string' ) {\n                                                   addComment.error( r );\n                                               }\n                                               else {\n                                                   addComment.error( 'Oops!' );\n                                               }\n                                               addComment.cancelReply();\n                                               return;\n                                           }\n\n                                           //addComment.myComments[] = d.comment_ID;\n\n                                           addComment.newComment( d.html, d.comment_ID, d.comment_parent, true, 'comment' );\n                                           // Kill anything in the comment form and reset the reply button\n                                           addComment.cancelReply();\n                                           $( '#comment-form #comment' ).val( '' ).trigger( 'keyup' );\n                                       }\n                                   } );\n\n                return false;\n            },\n\n            /**\n             * Scan through looking for missing toggles and add them.\n             * @param {[type]} hidden [description]\n             */\n            addToggles: function( hidden ) {\n                $( '#commentlist li.depth-' + commentingL10n.nest_depth + ' > ul.children' ).each( function() {\n\n                    if ( !$( this ).prev( 'div.toggle' ).length ) {\n                        $( this ).before( $( '<div class=\"toggle\"></div>' ).hide().css( { opacity: 0 } ) );\n                        $( this ).prev( 'div.toggle' ).show().fadeTo( 'slow', 1, function() {\n                            // Kill the filter for IE as it makes the text unreadable.\n                            if ( undefined !== $( this )[ 0 ].style ) {\n                                $( this ).css( 'FILTER', '' );\n                                $( this )[ 0 ].style.filter = '';\n                            }\n                        } );\n                    }\n\n                    if ( hidden === true )\n                        $( this ).hide().prev( 'div.toggle' ).addClass( 'kqofn-hidden' );\n\n                    addComment.toggleToggleText( $( this ).prev( 'div.toggle' ) );\n                } );\n            },\n\n            /**\n             * Change the text between the 4 possible states based on the position of the toggle passed\n             * @param  {[type]} obj [description]\n             * @return {[type]}     [description]\n             */\n            toggleToggleText: function( obj ) {\n                if ( typeof obj !== 'object' && typeof obj === 'string' )\n                    obj = $( obj );\n\n                obj.each( function() {\n                    var poster_name = $( this ).prev( 'div.comment-body' ).find( 'cite.fn' ).text(),\n                        reply_quant = $( this ).next( 'ul.children' ).find( 'li.comment' ).length;\n\n                    if ( $( this ).hasClass( 'kqofn-hidden' ) ) {\n                        $( this ).html( reply_quant == 1 ? addComment.showOne : addComment.showMany );\n                    }\n                    else {\n                        $( this ).html( reply_quant == 1 ? addComment.hideOne : addComment.hideMany );\n                    }\n\n                    $( this ).find( '.post-count' ).text( reply_quant );\n                    $( this ).find( '.poster-name' ).text( poster_name != '' ? poster_name : commentingL10n.unknown );\n                } );\n\n                return true;\n            },\n\n            /**\n             * Sets up the AJAX polling by calling the respective functions responsible at polling intervals\n             * @param  boolean on Is AJAX polling turned on\n             */\n            startInterval: function( on ) {\n\n                if ( on === true ) {\n                    if ( undefined !== commentingL10n.update && commentingL10n.update == 1 ) {\n                        addComment.interval = setInterval( function() {\n                            addComment.getUpdates();\n                        }, parseInt( commentingL10n.polling, 10 ) >= 10 ? commentingL10n.polling * 1000 : 10000 );\n                    }\n                }\n                else {\n                    clearInterval( addComment.interval );\n                }\n            },\n\n            getUpdates: function() {\n                addComment.getCommentUpdates();\n            },\n\n            /**\n             * Retrieves the comment updates via AJAX\n             * @param  {[type]}  [description]\n             * @return {[type]}  [description]\n             */\n            getCommentUpdates: function() {\n                var data = {\n                    _spec_ajax: 'Why is everyone looking at me', // As you can guess this can be anything at all just need to be there. :D\n                    action: 'get_comment_changes',\n                    action_id: addComment.action_id,\n                    time: commentingL10n.time,\n                    post_id: commentingL10n.post_id\n                };\n\n                $.post( commentingL10n.ajax_url, data, function( r ) {\n                    var d, i;\n                    try {\n                        d = JSON.parse( r );\n                    }\n                    catch ( e ) {\n                        if ( typeof r === 'string' ) {\n                            addComment.error( r );\n                        }\n                        else {\n                            addComment.error( 'Oops!' );\n                        }\n                        return;\n                    }\n\n                    if ( d !== null && d !== undefined ) {\n                        for ( i in d ) {\n                            comment = d[ i ];\n                            if ( comment !== undefined ) {\n                                var time = comment.log_date !== null ? comment.log_date : comment.comment_date;\n                                if ( time !== null ) {\n                                    commentingL10n.time = time;\n                                }\n                                addComment.action_id = comment.action_id !== null ? comment.action_id : 0;\n\n                                if ( /*d[i].action === 'approve' &&*/ comment.html !== undefined && d[ i ].html !== null && comment.html !== '' ) {\n                                    addComment.newComment( comment.html, comment.comment_ID, comment.comment_parent, false, comment.comment_type );\n                                }\n                                else {\n                                    addComment.deleteComment( comment.comment_ID, comment.action );\n                                }\n                            }\n                        }\n                    }\n                } );\n            },\n\n            /**\n             * Similar to getCommentUpdates but with comments requiring moderation, makes an AJAX request calling for new moderated comments\n             */\n            getModerationUpdates: function() {\n                var data = {\n                    _spec_ajax: 'Why is everyone looking at me', // As you can guess this can be anything at all just need to be there. :D\n                    action: 'get_moderation_changes',\n                    action_id: addComment.action_id,\n                    time: commentingL10n.time,\n                    post_id: commentingL10n.post_id\n                };\n\n                $.post( commentingL10n.ajax_url, data, function( r ) {\n                    var d, i, comment;\n                    try {\n                        d = JSON.parse( r );\n                    }\n                    catch ( e ) {\n                        if ( typeof r === 'string' ) {\n                            addComment.error( r );\n                        }\n                        else {\n                            addComment.error( 'Oops!' );\n                        }\n                        return;\n                    }\n\n                    if ( d !== null && d !== undefined ) {\n                        for ( i in d ) {\n                            comment = d[ i ];\n                            if ( comment !== undefined ) {\n                                var time = comment.log_date !== null ? comment.log_date : comment.comment_date;\n                                if ( time !== null ) {\n                                    commentingL10n.time = time;\n                                }\n                                addComment.action_id = comment.action_id !== null ? comment.action_id : 0;\n\n                                if ( /*d[i].action === 'approve' &&*/ comment.html !== undefined && comment.html !== null && comment.html !== '' ) {\n                                    addComment.newComment( comment.html, comment.comment_ID, comment.comment_parent, false, comment.comment_type );\n                                }\n                            }\n                        }\n                    }\n                } );\n            },\n\n            trackbackToggle: function( max_height ) {\n\n                if ( $( '#trackback-list' ).height() > (max_height > 0 ? max_height : 400) && !$( '#trackback-list' ).prev( '.trackback-toggle' ).length && $( '#trackback-list' ).length ) {\n                    $( '#trackback-list' )\n                        .hide()\n                        .before( '<div class=\"trackback-toggle\"><span class=\"toggle-text\">' + commentingL10n.tb_show + '</span></div>' )\n                        .prev( '.trackback-toggle' )\n                        .click( function() {\n                            $( this ).toggleClass( 'active' ).next( '#trackback-list' ).slideToggle( 'fast', function() {\n                                $( this )\n                                    .prev( '.trackback-toggle' )\n                                    .children( '.toggle-text' )\n                                    .text( $( this ).css( 'display' ) === 'none' ? commentingL10n.tb_show : commentingL10n.tb_hide );\n                            } );\n                        } );\n                }\n\n                // Hide trackbacks that show up in the comment stream.\n                $( '#commentlist li.pingback > .comment-body .comment-content, #commentlist li.trackback > .comment-body .comment-content' ).each( function() {\n                    // If this already has a toggle then jump ship.\n                    if ( $( this ).prev( '.trackback-toggle' ).length )\n                        return true;\n\n                    var from = commentingL10n.tb_from.replace( '%s', '<span class=\"tb-from\">' + $( this ).find( 'cite.fn' ).text() + '</span>' );\n                    $( this )\n                        .hide()\n                        .addClass( 'with-toggle' )\n                        .before( '<div class=\"trackback-toggle\"></div>' )\n                        .prev( '.trackback-toggle' )\n                        .html( from )\n                        .click( function() {\n                            $( this ).next( '.comment-content' ).slideToggle( 'fast' );\n                        } );\n\n                    return true;\n                } );\n            },\n\n            approveComment: function( commentEl, comment_id ) {\n                //commentingL10n.post_id\n                var data = {\n                    _spec_ajax: 'Why is everyone looking at me', // As you can guess this can be anything at all just need to be there. :D\n                    action: 'approve_comment',\n                    action_id: addComment.action_id,\n                    time: commentingL10n.time,\n                    post_id: commentingL10n.post_id,\n                    comment_id: comment_id\n                };\n\n                $.post( commentingL10n.ajax_url, data, function( r ) {\n                    if ( r == \"done\" ) {\n                        commentEl.text( \"Approval sent, verifying...\" );\n                        addComment.getCommentUpdates();\n                    }\n                    else {\n                        addComment.error( r );\n                    }\n                } );\n            },\n            spamComment: function( commentEl, comment_id ) {\n                //commentingL10n.post_id\n                var data = {\n                    _spec_ajax: 'Why is everyone looking at me', // As you can guess this can be anything at all just need to be there. :D\n                    action: 'spam_comment',\n                    action_id: addComment.action_id,\n                    time: commentingL10n.time,\n                    post_id: commentingL10n.post_id,\n                    comment_id: comment_id\n                };\n\n                $.post( commentingL10n.ajax_url, data, function( r ) {\n                    if ( r == \"done\" ) {\n                        commentEl.text( \"Spam req sent, verifying...\" );\n                        addComment.getCommentUpdates();\n                    }\n                    else {\n                        addComment.error( r );\n                    }\n                } );\n            },\n            trashComment: function( commentEl, comment_id ) {\n                //commentingL10n.post_id\n                var data = {\n                    _spec_ajax: 'Why is everyone looking at me', // As you can guess this can be anything at all just need to be there. :D\n                    action: 'delete_comment',\n                    action_id: addComment.action_id,\n                    time: commentingL10n.time,\n                    post_id: commentingL10n.post_id,\n                    comment_id: comment_id\n                };\n\n                $.post( commentingL10n.ajax_url, data, function( r ) {\n                    if ( r == \"done\" ) {\n                        commentEl.text( \"Deletion sent, verifying...\" );\n                        addComment.getCommentUpdates();\n                    }\n                    else {\n                        addComment.error( r );\n                    }\n                } );\n            },\n\n            _init: function() {\n                var form = $( 'form#comment-form' ),\n                    list = $( '#commentlist' );\n\n                $( document ).ready( function( $ ) {\n\n                    addComment.startInterval( true );\n\n                    $.ajaxSetup( {\n                                     cache: false,\n                                     timeout: (commentingL10n.polling * 1000) - 2000 // Give myself 2 seconds before the next run to get everything in place.\n                                 } );\n\n                    // Add the submit action\n                    form.submit( function() {\n                        addComment.submit( this );\n                        return false;\n                    } );\n\n                    // Make sure the cancel comment button does what it should\n                    form.on( 'click', '#cancel-comment-reply-link', function() {\n                        addComment.cancelReply();\n                        return false;\n                    } );\n\n                    list.on( 'click', '.spec_moderation_button_approve', function() {\n                        var comment_id = $( this ).data( 'comment' );\n                        addComment.approveComment( $( this ), comment_id );\n                        return false;\n                    } );\n\n                    list.on( 'click', '.spec_moderation_button_spam', function() {\n                        var comment_id = $( this ).data( 'comment' );\n                        addComment.spamComment( $( this ), comment_id );\n                        return false;\n                    } );\n\n                    list.on( 'click', '.spec_moderation_button_delete', function() {\n                        var comment_id = $( this ).data( 'comment' );\n                        addComment.trashComment( $( this ), comment_id );\n                        return false;\n                    } );\n\n                    // Add some toggles to hide comments\n                    addComment.addToggles( true );\n\n                    // Add some code to the toggles added above.\n                    list.on( 'click', 'div.toggle', function() {\n                        if ( $( this ).hasClass( 'kqofn-hidden' ) ) {\n                            $( this ).removeClass( 'kqofn-hidden' ).next( 'ul.children' ).slideDown( 'fast', function() {\n                                // For some reason, don't ask me why, this stops IE8 from messing around with the margins on slide up/down.\n                                $( this ).prev( 'div.toggle' ).css( { backgroundPosition: 'bottom right' } );\n                            } );\n                        }\n                        else {\n                            $( this ).addClass( 'kqofn-hidden' ).next( 'ul.children' ).slideUp( 'fast', function() {\n                                $( this ).prev( 'div.toggle' ).css( { backgroundPosition: 'top left' } );\n                            } );\n                        }\n\n                        addComment.toggleToggleText( $( this ) );\n                    } );\n\n                    // Hide trackbacks from view if they take up too much space.\n                    // Too much is 400px in my opinion but then I don't really like them. :P\n                    // Or make trackbacks toggleible in the comment stream\n                    addComment.trackbackToggle( 400 );\n\n                    // Change the link button to a pop up element that has the link in it.\n                    list.on( 'click', '.comment-link', function() {\n                        var val = $( this ).attr( 'href' ),\n                            text = $( this ).text(),\n                            box = $( '<div class=\"comment-link-display\"><span>' + text + '</span><input type=\"text\" value=\"' + val + '\" /></div>' );\n\n                        $( 'body' )\n                            .append( box )\n                            .find( '.comment-link-display' )\n                            .css( {\n                                      position: 'absolute',\n                                      top: ($( this ).offset().top - 27) + 'px',\n                                      left: ($( this ).offset().left + 5) + 'px',\n                                      zIndex: 100,\n                                      opacity: 0\n                                  } )\n                            .fadeTo( 'fast', 1, function() {\n\n                                $( this ).find( 'input' ).blur( function() {\n                                    $( this ).parents( '.comment-link-display' ).fadeTo( 'fast', 0, function() {\n                                        $( this ).remove();\n                                    } );\n                                } );\n\n                                $( this ).find( 'input' ).focus();\n                            } );\n                        return false;\n\n                    } );\n\n                    list.find( '.comment-link-display' ).on( 'focus', 'input', function() {\n                        this.select();\n                    } );\n\n                    //\t\t\tAdd some tags to the body to target ie6 - 9\n                    $.each( $.browser, function( i, val ) {\n                        if ( i == 'msie' && val === true ) {\n                            switch ( parseInt( $.browser.version.substr( 0, 1 ), 10 ) ) {\n                                case 6:\n                                case 7:\n\n                                    // Fix issue with inherited fontFamily on #content, only a problem\n                                    // for ie6 and 7.\n\n                                    $target = $( '#comment' );\n                                    while ( $target.css( 'fontFamily' ) == 'inherit' ) {\n                                        $target = $target.parent();\n                                    }\n                                    $( '#comment' ).css( {\n                                                             fontFamily: $target.css( 'fontFamily' ),\n                                                             fontSize: $target.css( 'fontSize' ),\n                                                             width: $( '#comment' ).innerWidth()\n                                                         }\n                                    );\n                                    break;\n                            }\n                        }\n                    } );\n\n                    $( '#comment' ).autogrow();\n\n                } );\n\n            }\n        };\n\n        addComment._init();\n    } );\n}( jQuery ));\n"],"names":["$","document","ready","window","addComment","interval","replying","action_id","showOne","commentingL10n","rpl_show_1","replace","hideOne","rpl_hide_1","showMany","rpl_show_2","hideMany","rpl_hide_2","scrollOff","parseInt","scroll_off","moveForm","belowID","commentID","formID","postID","str","next","text","to","cancelReply","before","length","substring","hide","prev","slideDown","attr","value","find","show","scrollTo","offset","duration","axis","onAfter","e","focus","slideUp","this","remove","removeAttr","removeClass","startInterval","commentDepth","id","c","match","error","msg","after","a","undefined","style","css","filter","setTimeout","deleteComment","comment_ID","action","parent","addClass","newComment","html","parent_ID","scroll_to","comment_type","depth_class","hasClass","trigger","append","max_depth","closest","children","backgroundPosition","toggleToggleText","addToggles","order","prepend","bind","fadeTo","trackbackToggle","submit","v","blankFields","each","val","err_txt_mis","ajaxSubmit","beforeSubmit","r","disabled","type","data","_spec_ajax","depth","status","responseText","statusText","success","d","JSON","parse","comment_parent","hidden","nest_depth","opacity","obj","poster_name","reply_quant","unknown","on","update","setInterval","getUpdates","polling","clearInterval","getCommentUpdates","time","post_id","post","ajax_url","i","comment","log_date","comment_date","getModerationUpdates","max_height","height","tb_show","click","toggleClass","slideToggle","tb_hide","from","tb_from","approveComment","commentEl","comment_id","spamComment","trashComment","_init","form","list","ajaxSetup","cache","timeout","box","position","top","left","zIndex","blur","parents","select","browser","version","substr","$target","fontFamily","fontSize","width","innerWidth","autogrow","jQuery"],"mappings":"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"}